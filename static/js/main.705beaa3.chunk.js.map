{"version":3,"sources":["assets/img/bb.png","store/modules/characters/redurcer.js","store/modules/profiler/redurcer.js","store/modules/episodes/redurcer.js","store/modules/rootRedurcers.js","store/types.js","services/axios.js","store/modules/characters/characters.js","store/modules/characters/sagas.js","store/modules/profiler/profiler.js","store/modules/profiler/sagas.js","store/modules/episodes/episodes.js","store/modules/episodes/sagas.js","store/modules/rootSagas.js","store/index.js","store/modules/persistedRedux.js","services/history.js","utils/convertFormatData.js","components/cardPerson/style.js","components/button/style.js","components/button/button.js","components/button/index.js","components/cardPerson/cardPerson.js","components/cardPerson/index.js","components/input/style.js","components/input/input.js","components/input/index.js","pages/home/style.js","pages/home/index.js","pages/home/home.js","store/modules/characters/actions.js","pages/profiler/styled.js","pages/profiler/index.js","pages/profiler/profiler.js","store/modules/profiler/actions.js","utils/convertStatusCharacters.js","components/listEpisodes/style.js","components/listEpisodes/listEpisodes.js","components/listEpisodes/index.js","pages/episodes/style.js","pages/episodes/index.js","pages/episodes/episodes.js","store/modules/episodes/actions.js","routes/index.js","components/navBar/style.js","components/navBar/optionsNav.js","components/navBar/burgerNav.js","components/navBar/navBar.js","components/navBar/index.js","globalStyles/globalStyle.js","App.js","index.js"],"names":["module","exports","INITAL_STATE","characters","lastPageOffset","quotes","list","combineReducers","home","state","action","type","console","log","payload","profiler","episodes","axios","create","baseURL","headers","getAllCharacters","Promise","resolve","reject","get","then","data","catch","err","getMoreCharacters","limit","offset","mountUrl","getNameCharacters","name","call","requestCharacters","put","toast","error","request","length","all","takeLatest","getQuotesProfiler","author","getQuoteProfiler","cleanQuoteProfiler","requestProfiler","getEpisodes","actionEpisodes","rootSaga","redurcers","sagaMiddleware","createSagaMiddleware","store","createStore","persistReducer","key","storage","whitelist","composeWithDevTools","applyMiddleware","run","persistor","persistStore","history","createBrowserHistory","convertFormatDate","dataString","locale","Error","checkDate","Date","parse","isNaN","toLocaleDateString","CardContainer","Styled","div","ContainerImg","Image","img","effectImage","cardBody","TitleCard","span","Label","label","BackFace","visibilityButton","ContainerButton","bgColor","Button","colorText","text","onClick","defaultProps","onclick","CardPerson","character","fallbackClickCard","useState","controlMouse","setControlMouse","onMouseEnter","onMouseLeave","src","alt","birthday","ContainerInput","Input","input","focus","colorLabel","onChange","placeholder","valueInput","setValueInput","setFocus","useEffect","document","querySelector","event","value","target","ContainerAllCard","Home","connect","dispatch","useDispatch","setOffset","_handleClickcard","itemClicked","push","mountQuery","split","filter","join","map","index","ContainerProfiler","styled","ImageContainer","DetailsContainer","TextItem","Profiler","setProfiler","quotesCurrent","setQuotesCurrent","setIndex","location","item","toLocaleLowerCase","_handleChangeQuote","useCallback","quote","setTimeout","Object","keys","nickname","occupation","category","string","convertStatusCharacters","status","ContainerEpisodes","ContainerContent","ListEpisodes","listEspisodes","viewSeason","air_date","episode","season","series","title","Number","_renderList","ContainerEpisodios","TextTitleSeason","MoreSeasonContainer","MoreSeason","selected","Episodes","setSeason","seasonCurrent","setSeasonCurrent","numberSeason","obj","forEach","element","trim","Set","Routes","exact","path","component","Header","Nav","List","ul","open","ListItem","li","Burger","optionsNav","fallbackClickMenu","option","BurgerNav","setOpen","NavBar","newOptionsNav","setVewOtionsNav","auxNewOpttion","pathname","listen","bb","clickItem","createGlobalStyle","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.705beaa3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bb.78d8a85c.png\";","import * as types from '../../types';\n\nconst INITAL_STATE = {\n  characters: [],\n  lastPageOffset: null,\n};\n\nexport default function redurcers(state = INITAL_STATE, action) {\n  switch (action.type) {\n    case types.SAVE_ALL_CHARACTERS:\n      console.log();\n      return {\n        ...state,\n        characters: action.payload,\n      };\n\n    case types.LAST_PAGE_SEARCH:\n      return {\n        ...state,\n        lastPageOffset: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import * as types from '../../types';\n\nconst INITAL_STATE = {\n  quotes: [],\n};\n\nexport default function redurcers(state = INITAL_STATE, action) {\n  switch (action.type) {\n    case types.SET_QUOTE_PROFILER:\n      return {\n        ...state,\n        quotes: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import * as types from '../../types';\nconst INITAL_STATE = {\n  list: [],\n};\n\nexport default function redurcers(state = INITAL_STATE, action) {\n  switch (action.type) {\n    case types.SET_EPISODES:\n      return {\n        ...state,\n        list: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport characters from './characters/redurcer';\nimport profiler from './profiler/redurcer';\nimport episodes from './episodes/redurcer';\n\nexport default combineReducers({ home: characters, profiler, episodes });\n/**\n * //configuration redurces the app\n */\n","export const GET_ALL_CHARACTERS = 'GET_ALL_CHARACTERS';\nexport const SAVE_ALL_CHARACTERS = 'SAVE_ALL_CHARACTERS';\n\n/** pagination  */\nexport const GET_MORE_CHARACTERS = 'GET_MORE_CHARACTERS';\nexport const LAST_PAGE_SEARCH = 'LAST_PAGE_SEARCH';\n\n/**search name  */\nexport const GET_NAME_CHARACTERS = 'GET_NAME_CHARACTERS';\n\n/** Quotes */\nexport const GET_QUOTE_PROFILER = 'GET_QUOTE_PROFILER';\nexport const SET_QUOTE_PROFILER = 'SET_QUOTE_PROFILER';\nexport const CLEAN_QUOTE_PROFILER = 'CLEAN_QUOTE_PROFILER';\n\n/** Episodes  */\nexport const GET_EPISODES = 'GET_EPISODES';\nexport const SET_EPISODES = 'SET_EPISODES';\n","/** config axios */\nimport axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://www.breakingbadapi.com/api/',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n","import axios from '../../../services/axios';\n\nexport const getAllCharacters = () =>\n  new Promise((resolve, reject) => {\n    axios\n      .get(`characters?limit=10&offset=0`)\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n\nexport const getMoreCharacters = (limit, offset) =>\n  new Promise((resolve, reject) => {\n    const mountUrl = `limit=${limit ? limit : 10}&offset=${\n      offset ? offset : 0\n    }`;\n    axios\n      .get(`characters?${mountUrl}`)\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n\nexport const getNameCharacters = (name) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`characters?name=${name}`)\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n};\n","import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport * as requestCharacters from './characters';\nimport * as types from '../../types';\nimport { toast } from 'react-toastify';\n\nfunction* getAllCharacters() {\n  try {\n    const { data } = yield call(requestCharacters.getAllCharacters);\n    yield put({\n      type: types.SAVE_ALL_CHARACTERS,\n      payload: data,\n    });\n  } catch (error) {\n    toast.error('Não foi possível obter os personagens!');\n  }\n}\n\nfunction* getMoreCharacters({ payload }) {\n  try {\n    const { offset } = payload;\n    let request = yield call(requestCharacters.getMoreCharacters, 10, offset);\n    if (request.data.length > 0) {\n      yield put({\n        type: types.LAST_PAGE_SEARCH,\n        payload: offset,\n      });\n    } else {\n      request = yield call(\n        requestCharacters.getMoreCharacters,\n        10,\n        offset - 10\n      );\n      toast.error('Não foi possível obter os personagens!');\n    }\n\n    yield put({\n      type: types.SAVE_ALL_CHARACTERS,\n      payload: request.data,\n    });\n  } catch (error) {\n    toast.error('Não foi possível obter os personagens!');\n  }\n}\n\nfunction* getNameCharacters({ payload }) {\n  try {\n    const { data } = yield call(requestCharacters.getNameCharacters, payload);\n    yield put({\n      type: types.SAVE_ALL_CHARACTERS,\n      payload: data,\n    });\n  } catch (error) {\n    toast.error('Não foi possível obter o personagen!');\n  }\n}\nexport default all([\n  takeLatest(types.GET_ALL_CHARACTERS, getAllCharacters),\n  takeLatest(types.GET_MORE_CHARACTERS, getMoreCharacters),\n  takeLatest(types.GET_NAME_CHARACTERS, getNameCharacters),\n]);\n","import axios from '../../../services/axios';\n\nexport const getQuotesProfiler = (author) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`quote?author=${author}`)\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n};\n","import { takeLatest, all, call, put } from 'redux-saga/effects';\nimport * as requestProfiler from './profiler';\nimport * as types from '../../types';\n\nfunction* getQuoteProfiler({ payload }) {\n  try {\n    const { data } = yield call(requestProfiler.getQuotesProfiler, payload);\n    yield put({\n      type: types.SET_QUOTE_PROFILER,\n      payload: data,\n    });\n  } catch (error) {}\n}\n\nfunction* cleanQuoteProfiler() {\n  try {\n    yield put({\n      type: types.SET_QUOTE_PROFILER,\n      payload: [],\n    });\n  } catch (error) {}\n}\n\nexport default all([\n  takeLatest(types.GET_QUOTE_PROFILER, getQuoteProfiler),\n  takeLatest(types.CLEAN_QUOTE_PROFILER, cleanQuoteProfiler),\n]);\n","import axios from '../../../services/axios';\n\nexport const getEpisodes = () => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(`episodes`)\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n};\n","import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport * as actionEpisodes from './episodes';\nimport { toast } from 'react-toastify';\nimport * as types from '../../types';\n\nfunction* getEpisodes() {\n  try {\n    const { data } = yield call(actionEpisodes.getEpisodes);\n    yield put({\n      type: types.SET_EPISODES,\n      payload: data,\n    });\n  } catch (error) {\n    toast.error('Não foi possível obter os episódios');\n  }\n}\n\nexport default all([takeLatest(types.GET_EPISODES, getEpisodes)]);\n","// configuration saga application\nimport { all } from 'redux-saga/effects';\nimport characters from './characters/sagas';\nimport profiler from './profiler/sagas';\nimport episodes from './episodes/sagas';\n\nexport default function* rootSaga() {\n  return yield all([characters, profiler, episodes]);\n}\n","import { persistStore } from 'redux-persist';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport persisteDate from './modules/persistedRedux';\nimport redurcers from './modules/rootRedurcers';\nimport rootSaga from './modules/rootSagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  persisteDate(redurcers),\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nexport default (redurcers) => {\n  const persistReducers = persistReducer(\n    {\n      key: 'CONSUMO_API_BREAKING_BAD',\n      storage,\n      whitelist: ['breakingbad'],\n    },\n    redurcers\n  );\n\n  return persistReducers;\n};\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nexport default history;\n","export const convertFormatDate = (dataString, locale) => {\n  if (!dataString && !locale) {\n    throw new Error(\n      'Os parametos de datas e  localização precisam ser passados '\n    );\n  }\n  const checkDate = Date.parse(dataString);\n  if (isNaN(checkDate)) return 'Não informado';\n  return new Date(dataString).toLocaleDateString(locale);\n};\n","// @ts-nocheck\nimport Styled from 'styled-components';\n\nexport const CardContainer = Styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid rgba(0,0,0,.125);\n  border-radius: .25rem;\n  margin: 15px;\n  width: 252px;\n\n`;\n\nexport const ContainerImg = Styled.div`\n  height: 300px;\n  padding: 10px;\n  overflow: hidden;\n  perspective: 1000px;\n  position: relative;\n  transition: transform 0.3s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Image = Styled.img`\n    height: 300px;\n    width: 100%;\n    object-fit: cover;\n    overflow: hidden;\n    opacity: .8;\n    border-radius: 6px;\n    object-position: top;\n    transform-style: preserve-3d;\n    transition: transform 0.8s;\n    position: absolute;\n\n${({ effectImage }) =>\n  effectImage &&\n  `transform: rotateY(180deg);\n      transition: transform 0.8s;\n      opacity: 0.3;`}\n\n\n`;\n\nexport const cardBody = Styled.div`\n    flex: 1 1 auto;\n    padding: 1.25rem;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const TitleCard = Styled.span`\n     font-weight: 500;\n    line-height: 1.2;\n    font-size: 1.25rem;\n`;\n\nexport const Label = Styled.label`\n    font-weight: 500;\n    font-size: 16px;\n`;\n\nexport const BackFace = Styled.div`\n  position: absolute;\n  backface-visibility: hidden;\n  transition: transform 0.8s;\n  bottom: 0;\n    width: 100%;\n  ${({ visibilityButton }) =>\n    visibilityButton\n      ? `\n      opacity: 1;\n  `\n      : `opacity: 0`}\n`;\n","// @ts-nocheck\nimport Styled from 'styled-components';\n\nexport const ContainerButton = Styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color:${({ bgColor }) => (bgColor ? bgColor : '#000 ')} ;\n  background-clip: border-box;\n  cursor: pointer;\n  border-radius: .25rem;\n`;\n\nexport const Button = Styled.div`\n  padding: 5px 10px;\n  text-align: center;\n  width: 100%;\n  color: ${({ colorText }) => (colorText ? colorText : '#fff ')} ;;\n  font-family: 'Roboto'\n`;\n","// @ts-nocheck\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Styled from './style';\nexport default function Button({ text, onClick, colorText, bgColor }) {\n  return (\n    <Styled.ContainerButton bgColor={bgColor}>\n      <Styled.Button onClick={onClick} colorText={colorText}>\n        {text}\n      </Styled.Button>\n    </Styled.ContainerButton>\n  );\n}\nButton.defaultProps = {\n  text: '',\n  onclick: () => {},\n  colorText: '',\n  bgColor: '',\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onclick: PropTypes.func.isRequired,\n  colorText: PropTypes.string,\n  bgColor: PropTypes.string,\n};\n","import Button from './button';\nexport default Button;\n","// @ts-nocheck\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { convertFormatDate } from '../../utils/convertFormatData';\nimport * as Styled from './style';\nimport Button from '../button';\n\nconst CardPerson = ({ character, fallbackClickCard }) => {\n  const [controlMouse, setControlMouse] = useState(false);\n  return (\n    <Styled.CardContainer>\n      <Styled.ContainerImg\n        onMouseEnter={() => setControlMouse(true)}\n        onMouseLeave={() => setControlMouse(false)}\n      >\n        <Styled.Image\n          effectImage={controlMouse}\n          src={character.img}\n          alt={character.name}\n        />\n\n        <Styled.BackFace visibilityButton={controlMouse}>\n          <Button\n            text=\"Ver detalhes\"\n            onClick={() => fallbackClickCard(character)}\n          />\n        </Styled.BackFace>\n      </Styled.ContainerImg>\n\n      <Styled.cardBody>\n        <Styled.TitleCard>{character.name}</Styled.TitleCard>\n        <Styled.Label>\n          Aniverśaio: {convertFormatDate(character.birthday, 'pt-BR')}\n        </Styled.Label>\n      </Styled.cardBody>\n    </Styled.CardContainer>\n  );\n};\n\nCardPerson.defaultProps = {\n  character: {},\n  fallbackClickCard: () => {},\n};\nCardPerson.propTypes = {\n  character: PropTypes.shape({\n    char_id: PropTypes.number,\n    name: PropTypes.string,\n    birthday: PropTypes.string,\n    occupation: PropTypes.arrayOf(PropTypes.string),\n    img: PropTypes.string,\n    status: PropTypes.string,\n    nickname: PropTypes.string,\n    appearance: PropTypes.arrayOf(PropTypes.number),\n    portrayed: PropTypes.string,\n    category: PropTypes.string,\n    better_call_saul_appearance: PropTypes.array,\n  }).isRequired,\n\n  fallbackClickCard: PropTypes.func,\n};\nexport default CardPerson;\n","import CardPerson from './cardPerson';\nexport default CardPerson;\n","// @ts-nocheck\nimport Styled from 'styled-components';\n\nexport const ContainerInput = Styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color:${({ bgColor }) => (bgColor ? bgColor : '#000 ')} ;\n  background-clip: border-box;\n  cursor: pointer;\n  border-radius: .25rem;\n  position: relative;\n\n`;\n\nexport const Input = Styled.input`\n  padding: 15px 10px;\n  text-align: center;\n  color: ${({ colorText }) => (colorText ? colorText : '#fff ')} ;\n  font-family: 'Roboto';\n  width: 150px;\n  -webkit-transition: width 0.4s ease-in-out;\n  transition: width 0.4s ease-in-out;\n  z-index: 1;\n  :focus{\n    width: 100%;\n  }\n  ${({ focus }) => focus && '   width: 100%;'}\n\n`;\n\nexport const Label = Styled.span`\n  color: ${({ colorLabel }) => (colorLabel ? colorLabel : '#fff ')} ;\n  position: absolute;\n  display: flex;\n  width: 100%;\n  text-align: center;\n  height: 100%;\n  align-items: center;\n  justify-content: center;\n  font-size:18px;\n  cursor: default;\n`;\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Styled from './style';\nexport default function Input({\n  text,\n  onChange,\n  colorText,\n  bgColor,\n  placeholder,\n  type,\n  label,\n  colorLabel,\n}) {\n  const [valueInput, setValueInput] = useState('');\n  const [focus, setFocus] = useState(false);\n  useEffect(() => {\n    if (text) setValueInput(text);\n  }, [text]);\n\n  const _handleChangeInpput = (event) => {\n    const { value } = event.target;\n    setValueInput(value);\n    if (onChange) onChange(value);\n  };\n  const _handleFocusInput = () => {\n    const input = document.querySelector('input[name=input]');\n    input.focus();\n    setFocus(true);\n  };\n  return (\n    <Styled.ContainerInput\n      bgColor={bgColor}\n      onMouseLeave={() => setFocus(false)}\n    >\n      <Styled.Label colorLabel={colorLabel} onClick={_handleFocusInput}>\n        {label}\n      </Styled.Label>\n      <Styled.Input\n        type={type}\n        onChange={_handleChangeInpput}\n        colorText={colorText}\n        value={valueInput}\n        placeholder={placeholder}\n        focus={focus}\n        name=\"input\"\n      />\n    </Styled.ContainerInput>\n  );\n}\nInput.defaultProps = {\n  text: '',\n  onclick: () => {},\n  colorText: '',\n  bgColor: '',\n};\n\nInput.propTypes = {\n  text: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  colorText: PropTypes.string,\n  bgColor: PropTypes.string,\n};\n","import Input from './input';\nexport default Input;\n","import Styled from 'styled-components';\n\nexport const ContainerAllCard = Styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  margin: 20px auto;\n  max-width: 84%;\n`;\nexport const ContainerButton = Styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 20px auto;\n  max-width: 84%;\n  padding: 0 32px 0 14px;\n`;\n","import Home from './home';\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport * as actionCharacters from '../../store/modules/characters/actions';\nimport CardPerson from '../../components/cardPerson';\nimport Button from '../../components/button';\nimport Input from '../../components/input';\nimport * as Styled from './style';\n\nconst Home = ({ home, history }) => {\n  const dispatch = useDispatch();\n  const [offset, setOffset] = useState(null);\n\n  useEffect(() => {\n    dispatch(actionCharacters.getCharacters());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (offset !== null) {\n      dispatch(\n        actionCharacters.getMoreCharacters({\n          offset: offset,\n        })\n      );\n    }\n  }, [offset, dispatch]);\n  const _handleClickcard = (itemClicked) =>\n    history.push('/detalhes', {\n      profiler: itemClicked,\n    });\n\n  const _handleOffsetMore = () => setOffset(home.lastPageOffset + 10);\n\n  const _handleOffsetLess = () => {\n    if (offset <= 0) {\n      setOffset(0);\n    } else {\n      setOffset(home.lastPageOffset - 10);\n    }\n  };\n  const _handleSearchCharacters = (text) => {\n    const mountQuery = text\n      .split(' ')\n      .filter((value) => value)\n      .join('+');\n    dispatch(actionCharacters.getNameCharacters(mountQuery));\n  };\n  return (\n    <>\n      <Input\n        type=\"text\"\n        onChange={_handleSearchCharacters}\n        colorText=\"#000\"\n        label=\"Pesquise pelo o nome do seu personagem favorito.\"\n        placeholder=\"Digite o nome do personagem\"\n        colorLabel=\"#ffa\"\n      />\n      <Styled.ContainerAllCard>\n        {home.characters.length > 0 &&\n          home.characters.map((character, index) => (\n            <CardPerson\n              character={character}\n              key={index}\n              fallbackClickCard={_handleClickcard}\n            />\n          ))}\n      </Styled.ContainerAllCard>\n      <Styled.ContainerButton>\n        <Button text=\"Voltar\" onClick={_handleOffsetLess} />\n        <Button text=\"Avançar\" onClick={_handleOffsetMore} />\n      </Styled.ContainerButton>\n    </>\n  );\n};\n\nconst mapStaeToProps = (state) => ({\n  home: state.home,\n});\nexport default connect(mapStaeToProps, null)(Home);\n","import * as types from '../../types';\n\nexport const getCharacters = () => ({ type: types.GET_ALL_CHARACTERS });\n\nexport const getMoreCharacters = (payload) => ({\n  type: types.GET_MORE_CHARACTERS,\n  payload,\n});\n\nexport const getNameCharacters = (payload) => ({\n  type: types.GET_NAME_CHARACTERS,\n  payload,\n});\n","import styled from 'styled-components';\nexport const ContainerProfiler = styled.div`\n  padding: 20px 40px;\n  display: flex;\n  background-color: #ffffdd24;\n  margin-bottom: 30px;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 350px;\n  height: 290px;\n  display: flex;\n  justify-content: center;\n  img {\n    max-width: 100%;\n    object-fit: fill;\n    width: auto;\n    height: 100%;\n    object-position: top;\n  }\n`;\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 20px;\n`;\n\nexport const TextItem = styled.span`\n  line-height: normal;\n  padding: 5px 0;\n  font-family: 'Open Sans';\n  span {\n    font-size: 18px;\n    font-weight: 500;\n    font-family: 'Roboto';\n    color: #fff;\n  }\n`;\n","import Profiler from './profiler';\nexport default Profiler;\n","// @ts-nocheck\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport * as actionsProfiler from '../../store/modules/profiler/actions';\nimport { convertFormatDate } from '../../utils/convertFormatData';\nimport { convertStatusCharacters } from '../../utils/convertStatusCharacters';\nimport * as Styled from './styled';\n\nconst interval = 2000;\nconst Profiler = ({ history, quotes }) => {\n  const dispatch = useDispatch();\n  const [profiler, setProfiler] = useState({});\n  const [quotesCurrent, setQuotesCurrent] = useState('');\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    return () => dispatch(actionsProfiler.clearQuotes());\n  }, [dispatch]);\n  useEffect(() => {\n    if (history.location.state) {\n      const { profiler } = history.location.state;\n      setProfiler(profiler);\n      dispatch(\n        actionsProfiler.getQuotesProfiler(\n          profiler.name\n            .split(' ')\n            .filter((item) => item)\n            .join('+')\n            .toLocaleLowerCase()\n        )\n      );\n    } else {\n      history.push('/');\n    }\n  }, [history, dispatch]);\n\n  const _handleChangeQuote = useCallback(() => {\n    if (quotes.length > 0) {\n      setIndex(index + 1);\n      if (index === quotes.length) setIndex(0);\n      if (quotes[index]) setQuotesCurrent(quotes[index].quote);\n    }\n  }, [quotes, setQuotesCurrent, index]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      _handleChangeQuote();\n    }, interval);\n  }, [_handleChangeQuote]);\n\n  return (\n    Object.keys(profiler).length && (\n      <>\n        <Styled.ContainerProfiler>\n          <Styled.ImageContainer>\n            <img src={profiler.img} alt=\"\" />\n          </Styled.ImageContainer>\n          <Styled.DetailsContainer>\n            <Styled.TextItem>\n              <span>Nome:</span> {profiler.name}\n            </Styled.TextItem>\n            <Styled.TextItem>\n              <span>Apelido:</span> {profiler.nickname}\n            </Styled.TextItem>\n            <Styled.TextItem>\n              <span>Aniverśario:</span>{' '}\n              {convertFormatDate(profiler.birthday, 'pt-BR')}\n            </Styled.TextItem>\n            <Styled.TextItem>\n              <span>Ocupação:</span> {profiler.occupation.join(' ')}\n            </Styled.TextItem>\n            <Styled.TextItem>\n              <span>Categoria:</span> {profiler.category}\n            </Styled.TextItem>\n            <Styled.TextItem>\n              <span>Status:</span> {convertStatusCharacters(profiler.status)}\n            </Styled.TextItem>\n            {quotesCurrent && (\n              <Styled.TextItem>\n                <span>Citações:</span> {quotesCurrent}\n              </Styled.TextItem>\n            )}\n          </Styled.DetailsContainer>\n        </Styled.ContainerProfiler>\n      </>\n    )\n  );\n};\n\nconst mapStaeToProps = (state) => ({\n  quotes: state.profiler.quotes,\n});\nexport default connect(mapStaeToProps, null)(Profiler);\n","import * as types from '../../types';\n\nexport const getQuotesProfiler = (payload) => ({\n  type: types.GET_QUOTE_PROFILER,\n  payload,\n});\n\nexport const clearQuotes = () => ({ type: types.CLEAN_QUOTE_PROFILER });\n","export const convertStatusCharacters = (string) => {\n  if (!string) throw new Error('Valor não foi passado');\n  switch (string) {\n    case 'Alive':\n      return 'Vivo';\n    case 'Presumed dead':\n      return 'Presumido como morto';\n    case 'Deceased':\n      return 'Morto';\n    default:\n      return '';\n  }\n};\n","// @ts-nocheck\nimport Styled from 'styled-components';\n\nexport const ContainerEpisodes = Styled.div`\n    display: flex;\n    flex-flow: row wrap;\n`;\n\nexport const ContainerContent = Styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid rgba(0,0,0,.125);\n  border-radius: .25rem;\n  margin: 15px;\n  width: 252px;\n  padding: 20px;\n`;\n\nexport const TextItem = Styled.span`\n  line-height: normal;\n  padding: 5px 0;\n  font-family: 'Open Sans';\n\n\n  span {\n    font-size: 18px;\n    font-weight: 600;\n    font-family: 'Roboto';\n    color: rgb(72 127 90);\n    padding-right:5px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertFormatDate } from '../../utils/convertFormatData';\nimport * as Styled from './style';\n\nconst ListEpisodes = ({ listEspisodes, viewSeason }) => {\n  const _renderList = (item) => {\n    const { air_date, characters, episode, season, series, title } = item;\n    if (viewSeason === Number(season)) {\n      return (\n        <Styled.ContainerContent>\n          <Styled.TextItem>\n            <span>Título:</span> {title}\n          </Styled.TextItem>\n          <Styled.TextItem>\n            <span> Entrou no ar:</span> {convertFormatDate(air_date, 'pt-BR')}\n          </Styled.TextItem>\n          <Styled.TextItem>\n            <span>Personagens:</span>\n            {characters.join(', ')}\n          </Styled.TextItem>\n          <Styled.TextItem>\n            <span>Episódio:</span> {episode}\n          </Styled.TextItem>\n          <Styled.TextItem>\n            <span>Temporada: </span>\n            {season}\n          </Styled.TextItem>\n          <Styled.TextItem>\n            <span>Série:</span>\n            {series}\n          </Styled.TextItem>\n        </Styled.ContainerContent>\n      );\n    }\n  };\n  return (\n    <>\n      <Styled.ContainerEpisodes>\n        {listEspisodes.map((item) => _renderList(item))}\n      </Styled.ContainerEpisodes>\n    </>\n  );\n};\n\nListEpisodes.defaultProps = {\n  ListEpisodes: [],\n};\nListEpisodes.propTypes = {\n  listEspisodes: PropTypes.array.isRequired,\n  viewSeason: PropTypes.number,\n};\n\nexport default ListEpisodes;\n","import ListEpisodes from './listEpisodes';\nexport default ListEpisodes;\n","// @ts-nocheck\nimport styled from 'styled-components';\nexport const ContainerEpisodios = styled.div`\n  padding: 20px 40px;\n  display: flex;\n  background-color: #ffffdd24;\n  margin-bottom: 30px;\n`;\n\nexport const TextTitleSeason = styled.span`\n  padding: 20px 40px;\n  display: flex;\n  background-color: #ffffdd24;\n  font-size: 20px;\n  color: #fff;\n`;\nexport const MoreSeasonContainer = styled.span`\n  padding: 0px 40px;\n  display: flex;\n  background-color: #ffffdd24;\n  margin-bottom: 30px;\n`;\nexport const MoreSeason = styled.span`\n  font-size: 15px;\n  padding: 5px 40px;\n  cursor: pointer;\n  color: #fff;\n  transition: 0.3s;\n  ${({ selected }) =>\n    selected && '  font-weight: bold; background-color: #ffffdd24;'}\n  :hover {\n    font-weight: bold;\n  }\n`;\n","import Episodes from './episodes';\nexport default Episodes;\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport * as actionEpisodes from '../../store/modules/episodes/actions';\nimport ListEpisodes from '../../components/listEpisodes';\nimport * as Styled from './style';\n\nconst Episodes = ({ episodes }) => {\n  const [season, setSeason] = useState({});\n  const [seasonCurrent, setSeasonCurrent] = useState(1);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(actionEpisodes.getEpisodes());\n  }, [dispatch]);\n\n  useEffect(() => {\n    let numberSeason = [];\n    let obj = {};\n    episodes.forEach((element) => numberSeason.push(element.season.trim()));\n    const newValues = [...new Set(numberSeason)];\n    newValues.forEach((item, index) => (obj[`temp-${index + 1}`] = item));\n    setSeason(obj);\n  }, [episodes]);\n  return (\n    episodes.length > 0 && (\n      <>\n        <Styled.TextTitleSeason>Mais Temporadas</Styled.TextTitleSeason>\n        <Styled.MoreSeasonContainer>\n          {Object.keys(season).map((item, index) => (\n            <Styled.MoreSeason\n              onClick={() => setSeasonCurrent(Number(item.split('-')[1]))}\n              selected={seasonCurrent === index + 1}\n            >\n              {index + 1}\n            </Styled.MoreSeason>\n          ))}\n        </Styled.MoreSeasonContainer>\n\n        <Styled.ContainerEpisodios>\n          {console.log(season)}\n          <ListEpisodes listEspisodes={episodes} viewSeason={seasonCurrent} />\n        </Styled.ContainerEpisodios>\n      </>\n    )\n  );\n};\nconst mapStateToProps = (state) => ({\n  episodes: state.episodes.list,\n});\nexport default connect(mapStateToProps, null)(Episodes);\n","import * as types from '../../types';\n\nexport const getEpisodes = () => ({ type: types.GET_EPISODES });\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from '../pages/home';\nimport Profiler from '../pages/profiler';\nimport Episodes from '../pages/episodes';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/detalhes\" component={Profiler} />\n      <Route exact path=\"/episodios\" component={Episodes} />\n    </Switch>\n  );\n}\n","// @ts-nocheck\nimport styled from 'styled-components';\n\nexport const Header = styled.div`\n  max-width: 100%;\n  width: 100%;\n  height: 270px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  height: 100%;\n  object-fit: contain;\n  object-position: center;\n  cursor: pointer;\n  width: 50%;\n`;\n\nexport const Nav = styled.div`\n  width: 100%;\n  height: 65px;\n  border-bottom: 2px solid #f1f1f1;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    border-bottom: none;\n    height: auto;\n    padding: 0;\n  }\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row nowrap;\n  @media (max-width: 768px) {\n    transform: ${({ open }) => (open ? 'translateX(0)' : 'translateX(100%)')};\n    transition: transform 0.3s ease-in-out;\n    flex-flow: column nowrap;\n    background-color: #0d2538;\n    position: fixed;\n    top: 0;\n    right: 0;\n    height: 100vh;\n    width: 300px;\n    padding-top: 40px;\n    z-index: 3;\n  }\n`;\n\nexport const ListItem = styled.li`\n  padding: 18px 10px;\n  ${({ selected }) =>\n    selected &&\n    `color: #fff;\n    font-weight: 500;`}\n  :hover {\n    background-color: #ffffdd24;\n    transition: 0.5s ease-in;\n    cursor: pointer;\n  }\n  @media (max-width: 768px) {\n    color: #fff;\n  }\n`;\n\nexport const Burger = styled.div`\n  width: 2rem;\n  height: 2rem;\n  position: fixed;\n  top: 15px;\n  right: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  flex-flow: column nowrap;\n  cursor: pointer;\n  z-index: 20;\n  display: none;\n  @media (max-width: 768px) {\n    display: flex;\n  }\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background-color: ${({ open }) => (open ? '#f1f1f1' : '#333')};\n    border-radius: 10px;\n    transform-origin: 1px;\n    transition: all 0.5s ease-out;\n    &:nth-child(1) {\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\n    }\n    &:nth-child(2) {\n      transform: ${({ open }) => (open ? 'translateX(100%)' : 'translateX(0)')};\n      opacity: ${({ open }) => (open ? 0 : 1)};\n    }\n    &:nth-child(3) {\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\n    }\n  }\n`;\n","// @ts-nocheck\nimport React from 'react';\nimport * as Styled from './style';\n\nexport default function optionsNav({ open, optionsNav, fallbackClickMenu }) {\n  return (\n    <Styled.List open={open}>\n      {optionsNav.length > 0 &&\n        optionsNav.map((option, index) => (\n          <Styled.ListItem\n            key={index}\n            onClick={() => fallbackClickMenu(option.path)}\n            selected={option.selected}\n          >\n            {option.value}\n          </Styled.ListItem>\n        ))}\n    </Styled.List>\n  );\n}\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\nimport OptionsNav from './optionsNav';\n\nimport * as Styled from './style';\n\nexport default function BurgerNav({ optionsNav, fallbackClickMenu }) {\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    setOpen(false);\n  }, [optionsNav]);\n  return (\n    <>\n      <Styled.Burger open={open} onClick={() => setOpen(!open)}>\n        <div />\n        <div />\n        <div />\n      </Styled.Burger>\n      <OptionsNav\n        open={open}\n        optionsNav={optionsNav}\n        fallbackClickMenu={fallbackClickMenu}\n      />\n    </>\n  );\n}\n","// @ts-nocheck\nimport React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport BurgerNav from './burgerNav';\nimport bb from '../../assets/img/bb.png';\nimport * as Styled from './style';\n\nconst NavBar = ({ history, optionsNav }) => {\n  const [newOptionsNav, setVewOtionsNav] = useState(optionsNav);\n  useEffect(() => {\n    let auxNewOpttion = optionsNav.map((item) => ({\n      ...item,\n      selected: item.path === history.location.pathname,\n    }));\n    setVewOtionsNav(auxNewOpttion);\n    history.listen((location) => {\n      auxNewOpttion = optionsNav.map((item) => ({\n        ...item,\n        selected: item.path === location.pathname,\n      }));\n      setVewOtionsNav(auxNewOpttion);\n    });\n  }, [history, optionsNav]);\n  return (\n    <Styled.Header>\n      <Styled.Image src={bb} alt=\"logo\" onClick={() => history.push('/')} />\n      <Styled.Nav>\n        <BurgerNav\n          optionsNav={newOptionsNav}\n          fallbackClickMenu={(clickItem) => history.push(clickItem)}\n        />\n      </Styled.Nav>\n    </Styled.Header>\n  );\n};\n\nNavBar.defaultProps = {\n  optionsNav: [\n    {\n      value: '',\n      path: '',\n    },\n  ],\n};\nNavBar.propTypes = {\n  optionsNav: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default NavBar;\n","import NavBar from './navBar';\nexport default NavBar;\n","import { createGlobalStyle } from 'styled-components';\nexport default createGlobalStyle`\n *{\n    margin: 0;\n    padding:0;\n    outline: none;\n    box-sizing: border-box;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  }\n\n\n  body{\n    background-color: rgb(72, 127, 90);\n  }\n\n  body  .Toastify  .Toastify__toast--success{\n  background: #0197f6;\n  }\n  body  .Toastify  .Toastify__toast--error{\n  background: #F2AF29;\n  }\n\n  img{\n    max-width: 100%;\n  }\n\n`;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Router } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport { store, persistor } from './store';\nimport history from './services/history';\nimport Routes from './routes';\nimport NavBar from './components/navBar';\n\nimport GlobalStyles from './globalStyles/globalStyle';\n\nfunction App() {\n  const optionsArr = [\n    {\n      value: 'Home',\n      path: '/',\n      selected: false,\n    },\n    {\n      value: 'Episódios',\n      path: '/episodios',\n      selected: false,\n    },\n  ];\n\n  return (\n    <Provider store={store}>\n      <NavBar history={history} optionsNav={optionsArr} />\n      <PersistGate persistor={persistor}>\n        <Router history={history}>\n          <Routes />\n          <GlobalStyles />\n        </Router>\n        <ToastContainer autoClose={3000} />\n      </PersistGate>\n    </Provider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}